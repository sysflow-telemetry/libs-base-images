name: ci

on:
  push:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  docker-libs:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set build args
        id: args
        shell: bash
        run: |
          echo "FALCOSECURITY_LIBS_VERSION=$(awk -F'=' '/FALCOSECURITY_LIBS_VERSION/{print $2}' makefile.manifest.inc)" >> $GITHUB_ENV
          echo "FALCOSECURITY_LIBS_DRIVER_VERSION=$(awk -F'=' '/FALCOSECURITY_LIBS_DRIVER_VERSION/{print $2}' makefile.manifest.inc)" >> $GITHUB_ENV
          echo "FALCO_VERSION=$(awk -F'=' '/FALCO_VERSION/{print $2}' makefile.manifest.inc)" >> $GITHUB_ENV
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository }}/libs
          tags: |
            type=raw,value=${{ env.FALCOSECURITY_LIBS_VERSION }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          tags: "${{ steps.meta.outputs.tags }}"
          push: true
          file: "docker/libs/Dockerfile"
          build-args: |
            FALCOSECURITY_LIBS_VERSION=${{ env.FALCOSECURITY_LIBS_VERSION }}
            FALCOSECURITY_LIBS_DRIVER_VERSION=${{ env.FALCOSECURITY_LIBS_DRIVER_VERSION }}
            FALCO_VERSION=${{ env.FALCO_VERSION }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  docker-runtime:
    needs: docker-libs
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set build args
        id: args
        shell: bash
        run: |
          echo "FALCOSECURITY_LIBS_VERSION=$(awk -F'=' '/FALCOSECURITY_LIBS_VERSION/{print $2}' makefile.manifest.inc)" >> $GITHUB_ENV
          echo "FALCOSECURITY_LIBS_DRIVER_VERSION=$(awk -F'=' '/FALCOSECURITY_LIBS_DRIVER_VERSION/{print $2}' makefile.manifest.inc)" >> $GITHUB_ENV
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository }}/runtime
          tags: |
            type=raw,value=${{ env.FALCOSECURITY_LIBS_DRIVER_VERSION }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          tags: "${{ steps.meta.outputs.tags }}"
          push: true
          file: "docker/driver-loader/Dockerfile"
          build-args: |
            FALCOSECURITY_LIBS_VERSION=${{ env.FALCOSECURITY_LIBS_VERSION }}
            FALCOSECURITY_LIBS_DRIVER_VERSION=${{ env.FALCOSECURITY_LIBS_DRIVER_VERSION }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}